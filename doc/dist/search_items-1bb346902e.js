searchNodes=[{"doc":"A blazing fast SDK for using the Dealcloud | OnePlace APIs in pure Elixir.","ref":"Dealcloud.html","title":"Dealcloud","type":"module"},{"doc":"Handles authentication with Dealcloud's API","ref":"Dealcloud.Auth.html","title":"Dealcloud.Auth","type":"module"},{"doc":"Refreshes tokens Examples Dealcloud.Auth . refresh ( % Dealcloud.Auth { } )","ref":"Dealcloud.Auth.html#refresh/1","title":"Dealcloud.Auth.refresh/1","type":"function"},{"doc":"Generates new token Examples Dealcloud.Auth . token ( % Dealcloud.Auth { } )","ref":"Dealcloud.Auth.html#token/1","title":"Dealcloud.Auth.token/1","type":"function"},{"doc":"","ref":"Dealcloud.Auth.html#t:t/0","title":"Dealcloud.Auth.t/0","type":"type"},{"doc":"The Data APIs are used to minipulate records in the site. These are the APIs that can be used to perform the following acitons: Create Entries Update Entries Query Entries Read Entries Delete Entries Some of these APIs work with information on a Cells level. These APIs have been grouped under Cells, and they accept inputs are Key-Value, and return responses in the same manner. The cells APIs have a direct equivalent that are marked as rows. These APIs works with entries as a object. Depending on the tooling you're using one of these paradaims may be more beneficial then the other.","ref":"Dealcloud.Data.html","title":"Dealcloud.Data","type":"module"},{"doc":"Historical Data API - Retrives data values from the past. This API can be used to retreive data from deleted entries as well as data from fields that have since been updated. We do not keep audits of deleted entries, so for a deleted entry this will always return the value at time of deletion. Examples Dealcloud.Data . get_historical ( )","ref":"Dealcloud.Data.html#get_historical/2","title":"Dealcloud.Data.get_historical/2","type":"function"},{"doc":"Get the records belonging to a view. If supply value later is enabled, this allows you to override the filter Examples Dealcloud.Data . get_view_details ( 1 , [ ] , query , % Dealcloud.Auth { } )","ref":"Dealcloud.Data.html#get_view_details/4","title":"Dealcloud.Data.get_view_details/4","type":"function"},{"doc":"View APIs Examples Dealcloud.Data . get_views ( % Dealcloud.Data.Query { } , % Dealcloud.Auth { } )","ref":"Dealcloud.Data.html#get_views/2","title":"Dealcloud.Data.get_views/2","type":"function"},{"doc":"This contains the functions for merging 2 or more entries. You're able to perform up to 100 mergest per call Takes the entryType as a integer Take a list of merge Requests Takes query params, must specify if it should overrite blank values Takes authentication ##Examples alias Dealcloud.Impl.Data.Merge mergeRequest = % Dealcloud.Data.Merge { entryId : 1 , mergeEntries : [ 1 , 2 , 3 ] } Merge . post ( 2014 , [ mergeRequest ] , % Dealcloud.Data.Query { overwriteEmptyValues : true } , % Auth { } ) :ok","ref":"Dealcloud.Data.html#merge/3","title":"Dealcloud.Data.merge/3","type":"function"},{"doc":"","ref":"Dealcloud.Data.html#t:auth/0","title":"Dealcloud.Data.auth/0","type":"type"},{"doc":"","ref":"Dealcloud.Data.html#t:history_query/0","title":"Dealcloud.Data.history_query/0","type":"type"},{"doc":"","ref":"Dealcloud.Data.html#t:merge_request/0","title":"Dealcloud.Data.merge_request/0","type":"type"},{"doc":"","ref":"Dealcloud.Data.html#t:query/0","title":"Dealcloud.Data.query/0","type":"type"},{"doc":"","ref":"Dealcloud.Data.html#t:view_filter/0","title":"Dealcloud.Data.view_filter/0","type":"type"},{"doc":"These are cell APIs. These APIs use key-value pairs when communicating with the server. Both Requests and Responses are sent as arrays of [{EntryId: 1, FieldId: 1, Value: &quot;Hello&quot;}]. These APIs are more performant, but may not be the best when working with ETL tools.","ref":"Dealcloud.Data.Cells.html","title":"Dealcloud.Data.Cells","type":"module"},{"doc":"Returns a list of records and all field values for the requested entries for a given entry type Examples Dealcloud.Data.Cells . all_fields ( 2011 , [ 1 , 2 , 3 , 4 ] , % Dealcloud.Auth { } )","ref":"Dealcloud.Data.Cells.html#all_fields/3","title":"Dealcloud.Data.Cells.all_fields/3","type":"function"},{"doc":"Just like Dealcloud.Data.Cells.create/3 , except can handle requests of any size. Creates new entries and Returns a list record field values for the created entries entryId must be negative integer Examples field1 = % Dealcloud.Data.Record { fieldId : 1 , entryId : - 1 , value : &quot;Hello&quot; } field2 = % Dealcloud.Data.Record { fieldId : 2 , entryId : - 1 , value : 6 } entries = [ field1 , field2 ] Dealcloud.Data.Cells . create ( 2011 , entries , % Dealcloud.Auth { } )","ref":"Dealcloud.Data.Cells.html#batch_create/3","title":"Dealcloud.Data.Cells.batch_create/3","type":"function"},{"doc":"Just like Dealcloud.Data.Cells.get/3 , except can handle requests of any size. Returns a list record field values for the entries and fields requested Examples field1 = % Dealcloud.Data.Record { fieldId : 1 , entryId : 1 } field2 = % Dealcloud.Data.Record { fieldId : 2 , entryId : 1 } entries = [ field1 , field2 ] query = % Dealcloud.Data.Query { wrapIntoArrays : true } Dealcloud.Data.Cells . batch_get ( entries , query , % Dealcloud.Auth { } )","ref":"Dealcloud.Data.Cells.html#batch_get/3","title":"Dealcloud.Data.Cells.batch_get/3","type":"function"},{"doc":"Just like Dealcloud.Data.Cells.update/3 , except can handle requests of any size. Updates entries and Returns a list record field values for the created entries entryId must be positive integer Examples field1 = % Dealcloud.Data.Record { fieldId : 1 , entryId : 1 , value : &quot;Hello&quot; } field2 = % Dealcloud.Data.Record { fieldId : 2 , entryId : 1 , value : 6 } entries = [ field1 , field2 ] Dealcloud.Data.Cells . create ( 2011 , entries , % Dealcloud.Auth { } )","ref":"Dealcloud.Data.Cells.html#batch_update/3","title":"Dealcloud.Data.Cells.batch_update/3","type":"function"},{"doc":"Creates new entries and Returns a list record field values for the created entries entryId must be negative integer Examples field1 = % Dealcloud.Data.Record { fieldId : 1 , entryId : - 1 , value : &quot;Hello&quot; } field2 = % Dealcloud.Data.Record { fieldId : 2 , entryId : - 1 , value : 6 } entries = [ field1 , field2 ] Dealcloud.Data.Cells . create ( 2011 , entries , % Dealcloud.Auth { } )","ref":"Dealcloud.Data.Cells.html#create/3","title":"Dealcloud.Data.Cells.create/3","type":"function"},{"doc":"Returns a list record field values for the entries and fields requested Examples field1 = % Dealcloud.Data.Record { fieldId : 1 , entryId : 1 } field2 = % Dealcloud.Data.Record { fieldId : 2 , entryId : 1 } entries = [ field1 , field2 ] query = % Dealcloud.Data.Query { wrapIntoArrays : true } Dealcloud.Data.Cells . get ( entries , query , % Dealcloud.Auth { } )","ref":"Dealcloud.Data.Cells.html#get/3","title":"Dealcloud.Data.Cells.get/3","type":"function"},{"doc":"Returns a list of all records and all field values for a given entry type Examples Dealcloud.Data.Cells . get_all ( 2011 , % Dealcloud.Auth { } )","ref":"Dealcloud.Data.Cells.html#get_all/2","title":"Dealcloud.Data.Cells.get_all/2","type":"function"},{"doc":"Returns a list of only entry ids for all records of a given entry type Examples filter1 = % Dealcloud.Data.Filter { fieldId : 1 , value : &quot;a&quot; , filterOperation : 1 } filter2 = % Dealcloud.Data.Filter { fieldId : 2 , value : 500 , filterOperation : 0 } filters = [ filter1 , filter2 ] Dealcloud.Data.Cells . get_filtered ( 2011 , filters , % Dealcloud.Auth { } )","ref":"Dealcloud.Data.Cells.html#get_filtered/3","title":"Dealcloud.Data.Cells.get_filtered/3","type":"function"},{"doc":"Returns a list of only entry ids for all records of a given entry type Examples Dealcloud.Data.Cells . get_ids ( 2011 , % Dealcloud.Auth { } )","ref":"Dealcloud.Data.Cells.html#get_ids/2","title":"Dealcloud.Data.Cells.get_ids/2","type":"function"},{"doc":"Returns name and entry ids for all records of a given entry type Examples Dealcloud.Data.Cells . get_keys ( 2011 , % Dealcloud.Auth { } )","ref":"Dealcloud.Data.Cells.html#get_keys/2","title":"Dealcloud.Data.Cells.get_keys/2","type":"function"},{"doc":"Returns a list of name and entry ids for entries modified since the provided DateTime Examples modifiedDate = % Dealcloud.Data.ModifiedQuery { modifiedSince : &quot;2019-07-15T15:53:00.050Z&quot; } Dealcloud.Data.Cells . get_modified ( 2011 , modifiedDate , % Dealcloud.Auth { } )","ref":"Dealcloud.Data.Cells.html#get_modified/3","title":"Dealcloud.Data.Cells.get_modified/3","type":"function"},{"doc":"Updates entries and Returns a list record field values for the created entries entryId must be positive integer Examples field1 = % Dealcloud.Data.Record { fieldId : 1 , entryId : 1 , value : &quot;Hello&quot; } field2 = % Dealcloud.Data.Record { fieldId : 2 , entryId : 1 , value : 6 } entries = [ field1 , field2 ] Dealcloud.Data.Cells . update ( 2011 , entries , % Dealcloud.Auth { } )","ref":"Dealcloud.Data.Cells.html#update/3","title":"Dealcloud.Data.Cells.update/3","type":"function"},{"doc":"","ref":"Dealcloud.Data.Cells.html#t:filter/0","title":"Dealcloud.Data.Cells.filter/0","type":"type"},{"doc":"","ref":"Dealcloud.Data.Cells.html#t:modified/0","title":"Dealcloud.Data.Cells.modified/0","type":"type"},{"doc":"","ref":"Dealcloud.Data.Cells.html#t:record/0","title":"Dealcloud.Data.Cells.record/0","type":"type"},{"doc":"These are Rows APIs, These APIs work using Arrays of Json objects. These APIs are typical of what you see in most other systems. These APIs works better with ETL tools.","ref":"Dealcloud.Data.Rows.html","title":"Dealcloud.Data.Rows","type":"module"},{"doc":"Creates new entries in the site. EntryId must be negative integer Examples Dealcloud.Data.Rows . create ( 2011 , [ { &quot;EntryId&quot; =&gt; - 1 , &quot;Name&quot; =&gt; &quot;Hello&quot; } ] , % Dealcloud.Auth { } ) Dealcloud.Data.Rows . create ( &quot;company&quot; , [ { &quot;EntryId&quot; =&gt; - 1 , &quot;Name&quot; =&gt; &quot;Hello&quot; } ] , % Dealcloud.Auth { } )","ref":"Dealcloud.Data.Rows.html#create/3","title":"Dealcloud.Data.Rows.create/3","type":"function"},{"doc":"Gets entries in the site using either the id or api name Examples Dealcloud.Data.Rows . get ( 2011 , % Dealcloud.Data.Query { } , % Dealcloud.Auth { } ) Dealcloud.Data.Rows . get ( &quot;company&quot; , % Dealcloud.Data.Query { } , % Dealcloud.Auth { } )","ref":"Dealcloud.Data.Rows.html#get/3","title":"Dealcloud.Data.Rows.get/3","type":"function"},{"doc":"Gets entries in the site, but uses a post request instead Examples Dealcloud.Data.Rows . get_as_post ( 2011 , % Dealcloud.Data.PostQuery { } , % Dealcloud.Auth { } ) Dealcloud.Data.Rows . get_as_post ( &quot;company&quot; , % Dealcloud.Data.PostQuery { } , % Dealcloud.Auth { } )","ref":"Dealcloud.Data.Rows.html#get_as_post/3","title":"Dealcloud.Data.Rows.get_as_post/3","type":"function"},{"doc":"Updates existing entries in the site. EntryId must be positive integer Examples Dealcloud.Data.Rows . update ( 2011 , [ { &quot;EntryId&quot; =&gt; 1 , &quot;Name&quot; =&gt; &quot;Hello&quot; } ] , % Dealcloud.Auth { } ) Dealcloud.Data.Rows . update ( &quot;company&quot; , [ { &quot;EntryId&quot; =&gt; 1 , &quot;Name&quot; =&gt; &quot;Hello&quot; } ] , % Dealcloud.Auth { } )","ref":"Dealcloud.Data.Rows.html#update/3","title":"Dealcloud.Data.Rows.update/3","type":"function"},{"doc":"Management contains all of the apis needed to work with users With these APIs you are able to: Get Users, ~&gt; By email, By modified data, by Id Create Users Update users ~&gt; change users names, active/inactive, change email addresses, change user permissions Delete users Get User groups Get user group details Get user activities Get proxy assignments Create proxy assignments","ref":"Dealcloud.Management.html","title":"Dealcloud.Management","type":"module"},{"doc":"This creates new proxy assignments. There's no way to update an existing proxy assignments. Proxy assignments can be replaced Examples Dealcloud.Management . get_user_proxy ( % Dealcloud.Management.Proxy { proxyUserId : 1 , userIds : [ 2 , 3 , 4 ] } , Dealcloud.Auth )","ref":"Dealcloud.Management.html#create_user_proxy/2","title":"Dealcloud.Management.create_user_proxy/2","type":"function"},{"doc":"Takes a list of Dealcloud.Management.user() and creates them as new Examples Dealcloud.Management . create_users ( [ % User { firstName : &quot;James&quot; , lastName : &quot;King&quot; , email : &quot;kingj@basketball.com&quot; } ] , Dealcloud.Auth )","ref":"Dealcloud.Management.html#create_users/2","title":"Dealcloud.Management.create_users/2","type":"function"},{"doc":"Takes a user id and deletes the associated user Examples Dealcloud.Management . delete_users ( 1 , Dealcloud.Auth )","ref":"Dealcloud.Management.html#delete_user/2","title":"Dealcloud.Management.delete_user/2","type":"function"},{"doc":"Takes a list of integers representing the user's Id and returns the users Examples Dealcloud.Management . get_by_ids ( [ 1 , 2 , 3 ] , Dealcloud.Auth )","ref":"Dealcloud.Management.html#get_by_ids/2","title":"Dealcloud.Management.get_by_ids/2","type":"function"},{"doc":"Takes a query containing either the user's email address or a dateTime, attempts to find the user or return all user modified since the dateTime provided Examples iex&gt; Dealcloud.Management . get_user ( % Dealcloud.Management.Query { email : &quot;test@email.com&quot; } , Dealcloud.Auth ) or iex&gt; Dealcloud.Management . get_user ( % Dealcloud.Management.Query { ModifiedSince : &quot;2019-07-15T15:53:00.050Z&quot; } , Dealcloud.Auth )","ref":"Dealcloud.Management.html#get_user/2","title":"Dealcloud.Management.get_user/2","type":"function"},{"doc":"These are the user activity APIs ## Examples Dealcloud.Management . get_user_activity ( % Dealcloud.Management.ActivityQuery { } , % Dealcloud.Auth { } )","ref":"Dealcloud.Management.html#get_user_activity/2","title":"Dealcloud.Management.get_user_activity/2","type":"function"},{"doc":"These are the user activity APIs ## Examples Dealcloud.Management . get_user_activity ( % Dealcloud.Management.ActivityQuery { } , % Dealcloud.Management.UserQuery { } , % Dealcloud.Auth { } )","ref":"Dealcloud.Management.html#get_user_activity/3","title":"Dealcloud.Management.get_user_activity/3","type":"function"},{"doc":"These are the user group APIs Examples Dealcloud.Management . get_user_group ( 1 , Dealcloud.Auth )","ref":"Dealcloud.Management.html#get_user_group/2","title":"Dealcloud.Management.get_user_group/2","type":"function"},{"doc":"These are the user group APIs Examples Dealcloud.Management . get_user_groups ( Dealcloud.Auth )","ref":"Dealcloud.Management.html#get_user_groups/1","title":"Dealcloud.Management.get_user_groups/1","type":"function"},{"doc":"These are the user license APIs Examples Dealcloud.Management . get_user_license ( 1 , Dealcloud.Auth )","ref":"Dealcloud.Management.html#get_user_license/2","title":"Dealcloud.Management.get_user_license/2","type":"function"},{"doc":"These are the user proxy APIs There are two ways to query for proxies, you can search by user or by the proxy Examples Dealcloud.Management . get_user_proxy ( % Dealcloud.Management.ProxyQuery { proxyQuery : &quot;test@user.com&quot; } , Dealcloud.Auth ) Dealcloud.Management . get_user_proxy ( % Dealcloud.Management.ProxyQuery { userQuery : &quot;test@user.com&quot; } , Dealcloud.Auth )","ref":"Dealcloud.Management.html#get_user_proxy/2","title":"Dealcloud.Management.get_user_proxy/2","type":"function"},{"doc":"Get all licenses Examples Dealcloud.Management . get_user_license ( Dealcloud.Auth )","ref":"Dealcloud.Management.html#get_users_license/1","title":"Dealcloud.Management.get_users_license/1","type":"function"},{"doc":"Get licenses for multiple users Examples Dealcloud.Management . get_users_license ( % Dealcloud.Management.Query { isBillable : true } , Dealcloud.Auth )","ref":"Dealcloud.Management.html#get_users_license/2","title":"Dealcloud.Management.get_users_license/2","type":"function"},{"doc":"Takes a list of Dealcloud.Management.user() and updates them Examples Dealcloud.Management . update_users ( [ % User { id : 1 , firstName : &quot;James&quot; , lastName : &quot;King&quot; , email : &quot;kingj@basketball.com&quot; } ] , Dealcloud.Auth )","ref":"Dealcloud.Management.html#update_user/2","title":"Dealcloud.Management.update_user/2","type":"function"},{"doc":"Update licenses Examples Dealcloud.Management . update_user_license ( % Dealcloud.Management.License { userId : 1 , licenseType : 1 } , Dealcloud.Auth )","ref":"Dealcloud.Management.html#update_user_license/2","title":"Dealcloud.Management.update_user_license/2","type":"function"},{"doc":"Takes a integer representing the user's Id and returns the user Examples iex&gt; Dealcloud.Management . user_get_by_id ( 1 , Dealcloud.Auth )","ref":"Dealcloud.Management.html#user_get_by_id/2","title":"Dealcloud.Management.user_get_by_id/2","type":"function"},{"doc":"","ref":"Dealcloud.Management.html#t:activityQuery/0","title":"Dealcloud.Management.activityQuery/0","type":"type"},{"doc":"","ref":"Dealcloud.Management.html#t:license/0","title":"Dealcloud.Management.license/0","type":"type"},{"doc":"","ref":"Dealcloud.Management.html#t:proxy/0","title":"Dealcloud.Management.proxy/0","type":"type"},{"doc":"","ref":"Dealcloud.Management.html#t:proxyQuery/0","title":"Dealcloud.Management.proxyQuery/0","type":"type"},{"doc":"","ref":"Dealcloud.Management.html#t:query/0","title":"Dealcloud.Management.query/0","type":"type"},{"doc":"","ref":"Dealcloud.Management.html#t:user/0","title":"Dealcloud.Management.user/0","type":"type"},{"doc":"The Marketing endpoints capture activities associated with campaigns and web pages","ref":"Dealcloud.Marketing.html","title":"Dealcloud.Marketing","type":"module"},{"doc":"See Dealcloud.Impl.Marketing.Activity.post/2 .","ref":"Dealcloud.Marketing.html#create_activity/2","title":"Dealcloud.Marketing.create_activity/2","type":"function"},{"doc":"See Dealcloud.Impl.Marketing.Activity.get/2 .","ref":"Dealcloud.Marketing.html#get_activity/2","title":"Dealcloud.Marketing.get_activity/2","type":"function"},{"doc":"See Dealcloud.Impl.Marketing.PageViewActivity.get/2 .","ref":"Dealcloud.Marketing.html#get_page_activity/2","title":"Dealcloud.Marketing.get_page_activity/2","type":"function"},{"doc":"See Dealcloud.Impl.Marketing.Activity.patch/2 .","ref":"Dealcloud.Marketing.html#update_activity/2","title":"Dealcloud.Marketing.update_activity/2","type":"function"},{"doc":"See Dealcloud.Impl.Marketing.PageViewActivity.patch/2 .","ref":"Dealcloud.Marketing.html#update_page_activity/2","title":"Dealcloud.Marketing.update_page_activity/2","type":"function"},{"doc":"","ref":"Dealcloud.Marketing.html#t:activity/0","title":"Dealcloud.Marketing.activity/0","type":"type"},{"doc":"","ref":"Dealcloud.Marketing.html#t:query/0","title":"Dealcloud.Marketing.query/0","type":"type"},{"doc":"","ref":"Dealcloud.Marketing.Activity.html","title":"Dealcloud.Marketing.Activity","type":"module"},{"doc":"","ref":"Dealcloud.Marketing.Activity.html#t:t/0","title":"Dealcloud.Marketing.Activity.t/0","type":"type"},{"doc":"","ref":"Dealcloud.Marketing.Query.html","title":"Dealcloud.Marketing.Query","type":"module"},{"doc":"","ref":"Dealcloud.Marketing.Query.html#t:t/0","title":"Dealcloud.Marketing.Query.t/0","type":"type"},{"doc":"Schema tells you information about your site and about the system. Use these APIs to discover things you need to know about configurations that are possible as well as what's currently implemented","ref":"Dealcloud.Schema.html","title":"Dealcloud.Schema","type":"module"},{"doc":"Appends new choice values to choice fields Schema.create_choices([&quot;Active&quot;, &quot;Inactive&quot;], %Auth{})","ref":"Dealcloud.Schema.html#create_choices/3","title":"Dealcloud.Schema.create_choices/3","type":"function"},{"doc":"Returns all fields from the site. Use this sparingly, this is heavy operation only needed when generating full site schema. Schema.get_entry_fields(&quot;company&quot;, %Auth{}) Schema.get_entry_fields(2011, %Auth{})","ref":"Dealcloud.Schema.html#get_all_fields/1","title":"Dealcloud.Schema.get_all_fields/1","type":"function"},{"doc":"These are the system Information APIs Returns all currencies supported by the system Schema.currencies(%Auth{})","ref":"Dealcloud.Schema.html#get_currencies/1","title":"Dealcloud.Schema.get_currencies/1","type":"function"},{"doc":"Returns fields for a specific entry type Schema.get_entry_fields(&quot;company&quot;, %Auth{}) Schema.get_entry_fields(2011, %Auth{})","ref":"Dealcloud.Schema.html#get_entry_fields/2","title":"Dealcloud.Schema.get_entry_fields/2","type":"function"},{"doc":"Returns information about specific entry type Schema.get_entry_types(&quot;company&quot;, %Auth{}) Schema.get_entry_types(2011, %Auth{})","ref":"Dealcloud.Schema.html#get_entry_type/2","title":"Dealcloud.Schema.get_entry_type/2","type":"function"},{"doc":"These are the site Information APIs Returns information about all entry types configured in the site Schema.get_entry_types(%Auth{})","ref":"Dealcloud.Schema.html#get_entry_types/1","title":"Dealcloud.Schema.get_entry_types/1","type":"function"},{"doc":"Returns information of a field. Requires the numerical ID of the field Schema.get_field(3, %Auth{})","ref":"Dealcloud.Schema.html#get_field/2","title":"Dealcloud.Schema.get_field/2","type":"function"},{"doc":"Returns information about field types. This information is helpful when looking at the entry type fields. Fields configured can be any of the fields returned by the endpoint Schema.get_system_entry_type(%Auth{})","ref":"Dealcloud.Schema.html#get_field_types/1","title":"Dealcloud.Schema.get_field_types/1","type":"function"},{"doc":"Returns information of a selection of fields passed in as query params Schema.get_fields([3,4,5], %Auth{})","ref":"Dealcloud.Schema.html#get_fields/2","title":"Dealcloud.Schema.get_fields/2","type":"function"},{"doc":"Returns information about all the filters supported by the data apis Schema.get_filters(%Auth{})","ref":"Dealcloud.Schema.html#get_filters/1","title":"Dealcloud.Schema.get_filters/1","type":"function"},{"doc":"Returns information about all the system entry types Schema.get_system_entry_type(%Auth{})","ref":"Dealcloud.Schema.html#get_system_entry_type/1","title":"Dealcloud.Schema.get_system_entry_type/1","type":"function"},{"doc":"Returns information about all the system field types Schema.get_system_field_type(%Auth{})","ref":"Dealcloud.Schema.html#get_system_field_type/1","title":"Dealcloud.Schema.get_system_field_type/1","type":"function"},{"doc":"Returns information about all timezones supported by the system Schema.get_time_zone(%Auth{})","ref":"Dealcloud.Schema.html#get_time_zone/1","title":"Dealcloud.Schema.get_time_zone/1","type":"function"},{"doc":"Returns all users in the site. Schema.get_field(%Auth{})","ref":"Dealcloud.Schema.html#get_users/1","title":"Dealcloud.Schema.get_users/1","type":"function"},{"doc":"Returns all users in the site filtered by ativeOnly filter Schema.get_field(%{&quot;activeOnly&quot; =&gt; &quot;true&quot;}, %Auth{})","ref":"Dealcloud.Schema.html#get_users/2","title":"Dealcloud.Schema.get_users/2","type":"function"},{"doc":"","ref":"readme.html","title":"Dealcloud","type":"extras"},{"doc":"Fast SDK for DealCloud's API written in pure Elixir","ref":"readme.html#description","title":"Dealcloud - Description","type":"extras"},{"doc":"If available in Hex , the package can be installed by adding dealcloud to your list of dependencies in mix.exs : def deps do [ { :dealcloud , &quot;~&gt; 0.4.0&quot; } ] end Documentation can be generated with ExDoc and published on HexDocs . Once published, the docs can be found at https://hexdocs.pm/dealcloud .","ref":"readme.html#installation","title":"Dealcloud - Installation","type":"extras"},{"doc":"","ref":"changelog.html","title":"CHANGELOG","type":"extras"},{"doc":"Changed Row methods from: get_entries -&gt; get create_entries -&gt; create update_entries -&gt; update Added Marketing Endpoints Marketing.Activity. get Marketing.Activity.update Marketing.","ref":"changelog.html#version-0-4-0","title":"CHANGELOG - Version 0.4.0","type":"extras"}]